{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["code刷题","introduct","leet","数据结构"],"data-structure/03-linked-list.html":["cn.com/problems/add","cn.com/problems/merg","cn.com/problems/remov","cn.com/problems/revers","cn.com/problems/swap","cycl","cycle/description/","duplic","https://leetcod","https://leetcode.com/problems/link","ii/description/","link","list","list/descript","list/description/","lists/description/","node","numbers/description/","pairs/description/","sort","two","链表"],"skill/01-binary-search.html":["(num","(nums[end]","(nums[start]","(start","+","//","0)","01","0;","1","1;","1、为什么循环条件和循环体写成这样？","2d","=","==","array/description/","bad","binarysearch(int[]","cn.com/problems/first","cn.com/problems/search","cn.com/problems/sqrtx/description/","end","end;","https://leetcod","https://leetcode.com/problems/search","ii/description/","insert","int","matrix","matrix/description/","mid;","null","nums,","nums.length","nums[mid])","position/description/","public","return","rotat","sort","start","start;","target)","version/description/","{","||","}","二分查找","模版","用于在排序的集合中查找某个元素。只不过需要注意一些细节。","相关题目","（3）方便获取第一个出现的值"],"skill/02-sort.html":["02","排序算法"],"leet-code/20-valid-parentheses.html":["\"()\"","\"()[]{}\"","\"([)]\"","\"(]\"","\"{[]}\"","(int","//leetcod","0;","1","1：","20","2：","3：","4：","5：","=","begin(prohibit","boolean","char","char[]","class","cn.com/problems/valid","deletion)","https://leetcod","import","isvalid(str","java.util.stack;","modif","new","parentheses/","public","region","s)","s.tochararray();","solut","stack","stack<>();","submit","s仅由括号'()[]{}'组成","{","如果字符串可以包含其他字符串的话，怎么做？","左括号必须以正确的顺序闭合。","左括号必须用相同类型的右括号闭合。","提示：","有效字符串需满足：","示例","给定一个只包括'('，')'，'{'，'}'，'['，']'的字符串s，判断字符串是否有效。","解答","输入：","输出：fals","输出：true","题目","验证括号"],"leet-code/33-search-in-rotated-sorted-array.html":["33","搜索旋转排序数组"],"leet-code/35-search-insert-position.html":["(num","(nums[mid]","(start","+","0","0)","0;","1","1:","1;","2","2:","35","3:","4","4:","5","7","=","==","[1,3,5,6],","class","end","int","mid","mid;","new","null","nums,","nums.length","parameter\");","public","runtimeexception(\"illeg","searchinsert(int[]","solut","start","target)","throw","{","||","}","你可以假设数组中无重复元素。","搜索插入位置","示例","给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。","解答","输入:","输入:[1,3,5,6],","输出:","题目"],"leet-code/46-permutations.html":["(int","(nums.length",")","0","0;","46","=","==","[","[1,2,3]","[1,2,3],","[1,3,2],","[2,1,3],","[2,3,1],","[3,1,2],","[3,2,1]","]","arraylist<>();","arraylist<>(list));","class","cn.com/problems/permutations/","https://leetcod","import","int[]","java.util.arraylist;","java.util.list;","list","list,","list.size())","list>","new","nums)","nums);","permute(int[]","permutehelper(list>","permutehelper(result,","privat","public","result","result,","result.add(new","result;","return","return;","solut","void","{","}","全排列","示例:","给定一个没有重复数字的序列，返回其所有可能的全排列。","解答","输入:","输出:","题目"],"leet-code/69-sqrtx.html":["(x","0)","0;","1:","2","2.82842...,","2:","4","69","8","=","==","class","end","if(end","int","mid)","mid;","mysqrt(int","public","return","solut","sqrt(int","start","x","x)","x的平方根","{","}","函数。","实现","是非负整数。","由于返回类型是整数，小数部分将被舍去。","由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。","的平方根是","的平方根，其中","示例","解答","计算并返回","说明:","输入:","输出:","题目"],"leet-code/74-search-a-2d-matrix.html":["\"中查找\");","(matrix","(matrix.length","(matrix[firstindex][secondindex]","(matrix[mid]","(matrix[mid][0]","(searchmatrix(matrix[start],","(start","*","*/","+","/*","//","0)","0;","1","1)","104","13","1;","1],","1、在行、列做俩次二分查找","1：","2、把二维降成一维","2：","3","74","=","==","[[1,3,5,7],[10,11,16,20],[23,30,34,60]],","boolean","class","col","end","false;","input","int","m","matrix,","matrix.length","matrix.length;","matrix[0].length;","matrix[i].length","mid;","n","new","null","n矩阵中，是否存在一个目标值。该矩阵具有如下特性：","params\");","public","return","row","runtimeexception(\"illegl","searchmatrix(int[]","searchmatrix(int[][]","searchmatrix(matrix[matrix.length","solut","start","system.out.println(\"在维度为\"","target","target)","target))","target);","throw","true;","x","{","||","}","在最后一维数组中查找","就在start那一维查找","提示：","搜索二维矩阵","每行中的整数从左到右按升序排列。","每行的第一个整数大于前一行的最后一个整数。","注意：下面俩个不能调整位置","确定target在哪一维数组里","示例","编写一个高效的算法来判断m","要掌握二维变一维的下标转换","解答","输入：matrix","输出：fals","输出：true","题目"],"leet-code/78-subsets.html":["(int","(nums.length","0)","0);","1","10","1、确定最终结果","1：","2、确定单个结果集","2：","3、模版函数解决","4、返回","78","=","==","[0]","[1,2,3]","arraylist<>());","arraylist<>();","arraylist<>(list));","class","cn.com/problems/subsets/description/","https://leetcod","import","int","int[]","java.util.arraylist;","java.util.arrays;","java.util.list;","list","list,","list>","new","nums)","nums,","nums中的所有元素互不相同","pos)","pos;","privat","public","result","result,","result.add(new","result;","return","solut","subsets(int[]","subsetshelper(list>","subsetshelper(result,","void","{","}","传入的pos是为了优化，减少递归子问题的规模？不是很理解","使用回溯法的模版写法是：","提示：","无重复元素的子集","示例","给你一个整数数组nums，数组中的元素互不相同。返回该数组所有可能的子集（幂集）。","解答","解集不能包含重复的子集。你可以按任意顺序返回解集。","输入：num","输出：[[],[0]]","输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]","这一题的remove就是回溯的关键","问题的难点就是递归辅助函数怎么写？剪枝的条件是什么？","题目"],"leet-code/88-merge-sorted-array.html":["(int","+","//","0","0;","1,","1：","2：","3","3,","88","=","[1,2,3,0,0,0],","[1],","[2,5,6],","[],","array/","class","cn.com/problems/merg","https://leetcod","index","index++;","int","int[]","int[m];","m","m,","merge(int[]","n","n)","new","nums1,","nums1[index]","nums1index","nums1index++;","nums1index;","nums2","nums2,","nums2[nums2index])","nums2[nums2index];","nums2index","nums2index++;","n，这样它就有足够的空间保存来自nums2的元素。","public","solut","sort","tempnum","tempnums[nums1index];","void","{","}","为了防止后面连续移动nums1元素，这里腾出nums1数组","初始化nums1和nums2的元素数量分别为m和n。你可以假设nums1的空间大小等于m","合并有序数组","如果其中一个数组未完全移动完","示例","给你两个有序整数数组nums1和nums2，请你将nums2合并到nums1中，使nums1成为一个有序数组。","解答","输入：nums1","输出：[1,2,2,3,5,6]","输出：[1]","这也是双指针思路解法的题目","题目"],"leet-code/90-subsets-ii.html":["(int","(nums.length","0)","0);","90","=","==","[","[1,2,2]","[1,2,2],","[1,2],","[1],","[2,2],","[2],","[]","]","arraylist<>());","arraylist<>();","arraylist<>(list));","arrays.sort(nums);","class","cn.com/problems/subset","https://leetcod","ii/description/","import","int","int[]","java.util.arraylist;","java.util.arrays;","java.util.list;","list","list,","list>","new","nums)","nums,","pos)","pos;","privat","public","result","result,","result.add(new","result;","return","solut","subsetswithdup(int[]","subsetswithduphelper(list>","subsetswithduphelper(result,","void","{","}","含重复元素的子集","示例:","给定一个可能包含重复元素的整数数组nums，返回该数组所有可能的子集（幂集）。","虽然模版很一样，但是理解起来有点麻烦。","解答","说明：解集不能包含重复的子集。","输入:","输出:","题目"],"leet-code/155-min-stack.html":["(minstackimpl.isempty()","(minstackimpl.isempty())","(minstackimpl.peek()","*/","/**","//leetcod","0.","155","2);","2.","2]","2],[0],[","3);","3,null,0,","3.","3],[],[],[],[]]","=",">",">=","[\"minstack\",\"push\",\"push\",\"push\",\"getmin\",\"pop\",\"top\",\"getmin\"]","[[],[","[null,null,null,null,","begin(prohibit","class","cn.com/problems/min","data","deletion)","getmin()","here.","https://leetcod","import","initi","int","java.util.stack;","minstack","minstack()","minstack();","minstack.getmin();","minstack.pop();","minstack.push(","minstack.push(0);","minstack.top();","minstackimpl","minstackimpl.peek().equals(stackimpl.pop()))","minstackimpl.peek();","minstackimpl.pop();","minstackimpl.push(x);","minstackimpl;","modif","new","pop()","pop、top和getmin操作总是在非空栈上调用。","privat","public","push(int","push(x)","region","return","stack","stack/","stack<>();","stackimpl","stackimpl.peek();","stackimpl.push(x);","stackimpl;","structur","submit","top()","void","x","x)","{","||","}","——","删除栈顶的元素。","将元素","推入栈中。","提示：","最小栈","检索栈中的最小元素。","示例:","获取栈顶元素。","解法","解释：","设计一个支持push，pop，top操作，并能在常数时间内检索到最小元素的栈。","输入：","输出：","返回","题目"],"leet-code/232-implement-queue-using-stacks.html":["\"empty\"]","\"peek\",","\"pop\",","\"push\",","&&","(!stack2.isempty())","(leftmost","(stack1.isempty())","*/","/**","//","1","1,","232","2]","=","[\"myqueue\",","[1,","[1]","[1],","[2]","[2],","[[],","[],","[]]","[null,","back","boolean","class","cn.com/problems/impl","data","element","element.","empty()","empty.","empty操作是合法的。","fals","false]","front","here.","https://leetcod","import","initi","int","is:","item","java.util.stack;","myqueu","myqueue()","myqueue();","myqueue.empty();","myqueue.peek();","myqueue.pop();","myqueue.push(1);","myqueue.push(2);","new","null,","peek()","peek/pop","pop()","privat","public","push","push(int","queue","queue)","queue.","remov","return","size,","stack","stack1","stack1.isempty()","stack1.peek();","stack1.pop();","stack1.push(item);","stack2","stack2.isempty();","stack2.pop();","stack2.push(x);","stack<>();","stacks/","structur","top,","us","void","whether","x","x)","{","}","——","也就是只有push","从队列的开头移除并返回元素","你只能使用标准的栈操作","你所使用的语言也许不支持栈。你可以使用list或者deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。","你能否实现每个操作均摊时间复杂度为o(1)的队列？换句话说，执行n个操作的总时间复杂度为o(n)，即使其中一个操作可能花费较长时间。","和i","如果队列为空，返回true；否则，返回fals","实现myqueue类：","将元素x推到队列的末尾","想象俩个杯子装水，只能用一个杯子喝水，只能用一个杯子倒水","用栈实现一个队列","示例：","解答","解释：","说明：","请你仅使用两个栈实现先入先出队列。队列应当支持一般队列的支持的所有操作（push、pop、peek、empty）：","输入：","输出：","返回队列开头的元素","进阶：","题目"],"leet-code/240-search-a-2d-matrix-ii.html":["&&","(colend","(matrix","(target","//,23,26,30]],","0)","0;","1","109","1;","1：","20","240","2：","5","=","==","=>",">=","[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21","boolean","class","colbegin","colend","input","int","m","matrix","matrix,","matrix.length","matrix[0].length","matrix[i].length","mid)","n","new","null","params\");","public","rowbegin","rowbegin++;","rowend","runtimeexception(\"illegl","searchmatrix(int[][]","solut","target","target)","throw","x","{","||","}","。该矩阵具有以下特性：","一遍横着找，一边列着找","中的一个目标值","提示：","搜索二维矩阵ii","每列的元素从上到下升序排列。","每列的所有元素从上到下升序排列","每行的元素从左到右升序排列。","每行的所有元素从左到右升序排列","矩阵","示例","编写一个高效的算法来搜索","缩小问题的规模；","解法","输入：matrix","输出：fals","输出：true","题目"],"leet-code/278-first-bad-version.html":["(n","...,","1;","2,","278","4","5，并且","=",">","api","bool","class","end","extend","fals","firstbadversion(int","int","isbadversion(3)","isbadversion(4)","isbadversion(5)","isbadversion(version)","n","n)","n;","n]，你想找出导致之后所有版本出错的第一个错误的版本。","public","solut","start","true","version","versioncontrol","{","个版本[1,","你可以通过调用","你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。","假设你有","所以，4","接口来判断版本号","是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用","是第一个错误的版本。","理解循环的条件写法。","的次数。","示例:","第一个错误的版本","给定","解答","调用","题目"],"leet-code/344-reverse-string.html":["(int","0;","344","=","class","cn.com/problems/revers","https://leetcod","public","reversestring(char[]","s)","solut","string/","void","{","不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用o(1)的额外空间解决这一问题。","你可以假设数组中的所有字符都是ascii码表中的可打印字符。","反转字符串","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组char[]的形式给出。","解法","这种解法似乎也是双指针的应用","题目"],"leet-code/509-fibonacci-number.html":["(n","+","0)","0;","0，f(1)","1","1)","1;","2);","2)，其中n","509","=","==",">","class","cn.com/problems/fibonacci","f(0)","f(n","f(n)","fib(int","fib(n","https://leetcod","int","n)","number/","public","return","solut","{","}","斐波那契数","斐波那契数，通常用f(n)表示，形成的序列称为斐波那契数列。该数列由0和1开始，后面的每一项数字都是前面两项数字的和。也就是：","给你n，请计算f(n)。","解答","题目"],"leet-code/905-sort-array-by-parity.html":["(begin","0;","1;","905","=","a)","a.length","array","a，返回一个数组，在该数组中，","begin","class","cn.com/problems/sort","end","https://leetcod","int","int[]","parity/","public","solut","sortarraybyparity(int[]","{","你可以返回满足此条件的任何数组作为答案。","按奇偶数排序","的所有偶数元素之后跟着所有奇数元素。","示例：","给定一个非负整数数组","解法","输入：[3,1,2,4]","输出：[2,4,3,1]、[4,2,3,1]、[2,4,1,3]、[4,2,1,3]","这也是双指针思路的解法","题目"],"leet-code/08-06-hanota-lcci.html":["(1)","(2)","(3)","(a","(a.size()","(num","0)","08.06","0]","0],","1)","1));","1,","1个盘子。","=","==","[1,","[2,","[]","[],","a,","a.size()","a中盘子的数目不大于14个。","b","b,","c","c)","c);","c.add(a.get(0));","class","cn.com/problems/hanota","hanota(list","https://leetcod","lcci/","list","moveplate(a.size(),","moveplate(int","moveplate(num","null","num,","original,","privat","public","return;","solut","target)","target);","target,","target.add(original.remove(original.size()","temp);","temp,","void","{","||","}","在经典汉诺塔问题中，有3根柱子及n个不同大小的穿孔圆盘，盘子可以滑入任意一根柱子。一开始，所有盘子自上而下按升序依次套在第一根柱子上(即每一个盘子只能放在更大的盘子上面)。移动圆盘时受到以下限制:","提示:","每次只能移动一个盘子;","汉诺塔问题","盘子只能从柱子顶端滑出移到下一根柱子;","盘子只能叠在比它大的盘子上。","示例1:","示例2:","解答","请编写程序，用栈将所有盘子从第一根柱子移到最后一根柱子。","输入：a","输出：c","这里拆分步骤就有点隐晦了，是将n个盘子问题，拆分成n","题目"]},"length":21},"tokenStore":{"root":{"0":{"1":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":5}}},"2":{"docs":{"skill/02-sort.html":{"ref":"skill/02-sort.html","tf":5}}},"8":{"docs":{},".":{"0":{"6":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":5}}},"docs":{}},"docs":{}}},"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},")":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},";":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}},";":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.041237113402061855},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}},".":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}},"，":{"docs":{},"f":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}},"docs":{}}}},"]":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}}},"1":{"0":{"4":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}},"9":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}}},"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}},"3":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}},"5":{"5":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":5}}},"docs":{}},"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.019138755980861243},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0392156862745098}},";":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.03409090909090909},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}},"、":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"循":{"docs":{},"环":{"docs":{},"条":{"docs":{},"件":{"docs":{},"和":{"docs":{},"循":{"docs":{},"环":{"docs":{},"体":{"docs":{},"写":{"docs":{},"成":{"docs":{},"这":{"docs":{},"样":{"docs":{},"？":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}},"在":{"docs":{},"行":{"docs":{},"、":{"docs":{},"列":{"docs":{},"做":{"docs":{},"俩":{"docs":{},"次":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}},":":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}},")":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.058823529411764705},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}},")":{"docs":{},";":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}}},"]":{"docs":{},",":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.015306122448979591},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.034482758620689655}}},"个":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"。":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}},"2":{"0":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":5},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}},"3":{"2":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":5}}},"docs":{}},"4":{"0":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":5}}},"docs":{}},"7":{"8":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":5}}},"docs":{}},"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576}},"d":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.022727272727272728}}},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}},":":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}},".":{"8":{"2":{"8":{"4":{"2":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}},"、":{"docs":{},"把":{"docs":{},"二":{"docs":{},"维":{"docs":{},"降":{"docs":{},"成":{"docs":{},"一":{"docs":{},"维":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"单":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"集":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"n":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}}}},"]":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},",":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}},"docs":{}}}},",":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}},"3":{"3":{"docs":{"leet-code/33-search-in-rotated-sorted-array.html":{"ref":"leet-code/33-search-in-rotated-sorted-array.html","tf":5}}},"4":{"4":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":5}}},"docs":{}},"5":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":5}}},"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}},":":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}},"、":{"docs":{},"模":{"docs":{},"版":{"docs":{},"函":{"docs":{},"数":{"docs":{},"解":{"docs":{},"决":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"0":{"docs":{},",":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}},"docs":{}}}}}}},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}},".":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{},"]":{"docs":{},"]":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}},"4":{"6":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":5}}},"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}},":":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}},"、":{"docs":{},"返":{"docs":{},"回":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}},"5":{"0":{"9":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":5}}},"docs":{}},"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}},"6":{"9":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":5}}},"docs":{}},"7":{"4":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":5}}},"8":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":5}}},"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}},"8":{"8":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":5}}},"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576}}},"9":{"0":{"5":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":5}}},"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":5}}},"docs":{}},"docs":{},"c":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"刷":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.3333333333333333}}}}}},"l":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}},"i":{"docs":{},"n":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.05}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.05},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.03409090909090909}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"x":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}},"[":{"docs":{},"]":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},";":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}},"docs":{}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.045454545454545456},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.06666666666666667},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.05263157894736842},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.05154639175257732},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.030612244897959183},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.05},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.04918032786885246},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.0625}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"[":{"docs":{},"]":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}},"i":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.075},"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.03488372093023256},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.03896103896103896},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}},":":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}},"4":{"docs":{},")":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}},"5":{"docs":{},")":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}},"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.3333333333333333}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.05}}}},"s":{"docs":{},"t":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.1},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0410958904109589},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.03488372093023256},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.03896103896103896},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.04310344827586207}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}}}}}}}}}}}}},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}}}}}}},">":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976}}}}}},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"/":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"./":{"ref":"./","tf":0.3333333333333333}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.05}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.175},"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.056818181818181816},"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.05}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}},"n":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.03278688524590164}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}}}}}}}}}}}}},"/":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}}},"s":{"1":{"docs":{},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}},"2":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927}},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}},"docs":{}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}}},"docs":{},",":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.022727272727272728},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}},")":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"l":{"docs":{},"l":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}},"e":{"docs":{},"w":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.022388059701492536},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.015306122448979591},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"。":{"docs":{},"该":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"具":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"它":{"docs":{},"就":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"保":{"docs":{},"存":{"docs":{},"来":{"docs":{},"自":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},";":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}},"]":{"docs":{},"，":{"docs":{},"你":{"docs":{},"想":{"docs":{},"找":{"docs":{},"出":{"docs":{},"导":{"docs":{},"致":{"docs":{},"之":{"docs":{},"后":{"docs":{},"所":{"docs":{},"有":{"docs":{},"版":{"docs":{},"本":{"docs":{},"出":{"docs":{},"错":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.025}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}}}}}}}},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}},")":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}},";":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}},"、":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"和":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"操":{"docs":{},"作":{"docs":{},"总":{"docs":{},"是":{"docs":{},"在":{"docs":{},"非":{"docs":{},"空":{"docs":{},"栈":{"docs":{},"上":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.03731343283582089},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.025510204081632654},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.03278688524590164},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}},"s":{"docs":{},"h":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}},"x":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.075},"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.022727272727272728},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.019138755980861243},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}},";":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}},"c":{"docs":{},"k":{"1":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}}}}}}}}}},"2":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}},"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.028169014084507043},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}},"/":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}},"s":{"docs":{},"/":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}},")":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"仅":{"docs":{},"由":{"docs":{},"括":{"docs":{},"号":{"docs":{},"'":{"docs":{},"(":{"docs":{},")":{"docs":{},"[":{"docs":{},"]":{"docs":{},"{":{"docs":{},"}":{"docs":{},"'":{"docs":{},"组":{"docs":{},"成":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}},"[":{"docs":{},"]":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"在":{"docs":{},"维":{"docs":{},"度":{"docs":{},"为":{"docs":{},"\"":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":0.05}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.03}},")":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.03409090909090909},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.03349282296650718},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},")":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.03278688524590164}},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"s":{"docs":{},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}},"docs":{}}}}}}}}}},")":{"docs":{},";":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358}}}},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}},"链":{"docs":{},"表":{"docs":{"data-structure/03-linked-list.html":{"ref":"data-structure/03-linked-list.html","tf":10}}}},"(":{"1":{"docs":{},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"2":{"docs":{},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"3":{"docs":{},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"docs":{},"n":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0392156862745098}},"u":{"docs":{},"m":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},"s":{"docs":{},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933}}}},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}}}}}}}}},"docs":{}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}},"x":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}},"[":{"0":{"docs":{},"]":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}}}}}}}}},"docs":{}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}},"a":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}},"+":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.03349282296650718},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0392156862745098}}},"/":{"docs":{},"/":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.025510204081632654}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}},",":{"2":{"3":{"docs":{},",":{"2":{"6":{"docs":{},",":{"3":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"*":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}},"*":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.025510204081632654}}}}},"=":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.045454545454545456},"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.11267605633802817},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.05333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0410958904109589},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.07177033492822966},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.05813953488372093},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.16494845360824742},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.03896103896103896},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.022388059701492536},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.025510204081632654},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.08},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.06557377049180328},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.058823529411764705},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.0625},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.06896551724137931}},"=":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.045454545454545456},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.03827751196172249},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.04},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0392156862745098},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.034482758620689655}}},">":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}},"/":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976}}},")":{"docs":{},";":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}},")":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"在":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}}}}}}}}}},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}},"中":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"不":{"docs":{},"大":{"docs":{},"于":{"1":{"4":{"docs":{},"个":{"docs":{},"。":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}},"docs":{}},"docs":{}}}}}}}}}}},"b":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}},"a":{"docs":{},"d":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}},"c":{"docs":{},"k":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"h":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.022727272727272728},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.028708133971291867},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}},";":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}},".":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}},".":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"。":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}},"m":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}},",":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.028708133971291867},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.03}},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}},";":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.022727272727272728},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933}}},")":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.022388059701492536}},"(":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}},"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358}}}}}}}}}}},";":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.015306122448979591}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"docs":{}}}}}}}}}}}}},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.045454545454545456},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.04081632653061224},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.058823529411764705}},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.02586206896551724}}}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976}}}}}}}}}},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0273972602739726},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}},"w":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}},"l":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.03278688524590164}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}}}},"{":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.06818181818181818},"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.028169014084507043},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.05333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0684931506849315},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.0847457627118644},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.06220095693779904},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.046511627906976744},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.041237113402061855},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.05194805194805195},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.06716417910447761},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.05102040816326531},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.04},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.03278688524590164},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.1},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0784313725490196},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.0625},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.05172413793103448}}},"|":{"docs":{},"|":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.014354066985645933},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"}":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.07954545454545454},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.02666666666666667},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0410958904109589},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.06779661016949153},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.0430622009569378},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.030927835051546393},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.025974025974025976},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.06716417910447761},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.05102040816326531},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0784313725490196},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.05172413793103448}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":5}}}}}},"模":{"docs":{},"版":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}},"用":{"docs":{},"于":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"某":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"一":{"docs":{},"些":{"docs":{},"细":{"docs":{},"节":{"docs":{},"。":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":5}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"题":{"docs":{},"目":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}},"（":{"3":{"docs":{},"）":{"docs":{},"方":{"docs":{},"便":{"docs":{},"获":{"docs":{},"取":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"值":{"docs":{"skill/01-binary-search.html":{"ref":"skill/01-binary-search.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"docs":{}},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{"skill/02-sort.html":{"ref":"skill/02-sort.html","tf":5}}}}}},"\"":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}},"[":{"docs":{},"]":{"docs":{},"{":{"docs":{},"}":{"docs":{},"\"":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}},"[":{"docs":{},")":{"docs":{},"]":{"docs":{},"\"":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}},"]":{"docs":{},"\"":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}},"{":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{},"\"":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{},"]":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"\"":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"o":{"docs":{},"p":{"docs":{},"\"":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}},"s":{"docs":{},";":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"其":{"docs":{},"他":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"？":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"未":{"docs":{},"完":{"docs":{},"全":{"docs":{},"移":{"docs":{},"动":{"docs":{},"完":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"必":{"docs":{},"须":{"docs":{},"以":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"闭":{"docs":{},"合":{"docs":{},"。":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}},"用":{"docs":{},"相":{"docs":{},"同":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"闭":{"docs":{},"合":{"docs":{},"。":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"提":{"docs":{},"示":{"docs":{},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}},":":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}},"有":{"docs":{},"效":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"需":{"docs":{},"满":{"docs":{},"足":{"docs":{},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}},"示":{"docs":{},"例":{"1":{"docs":{},":":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"2":{"docs":{},":":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.07042253521126761},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.05333333333333334},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}},":":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}},"：":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}},"给":{"docs":{},"定":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}},"一":{"docs":{},"个":{"docs":{},"只":{"docs":{},"包":{"docs":{},"括":{"docs":{},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},"，":{"docs":{},"'":{"docs":{},")":{"docs":{},"'":{"docs":{},"，":{"docs":{},"'":{"docs":{},"{":{"docs":{},"'":{"docs":{},"，":{"docs":{},"'":{"docs":{},"}":{"docs":{},"'":{"docs":{},"，":{"docs":{},"'":{"docs":{},"[":{"docs":{},"'":{"docs":{},"，":{"docs":{},"'":{"docs":{},"]":{"docs":{},"'":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"效":{"docs":{},"。":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"将":{"docs":{},"会":{"docs":{},"被":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"（":{"docs":{},"幂":{"docs":{},"集":{"docs":{},"）":{"docs":{},"。":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}}}}},"你":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"（":{"docs":{},"幂":{"docs":{},"集":{"docs":{},"）":{"docs":{},"。":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"将":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"合":{"docs":{},"并":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"成":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"，":{"docs":{},"请":{"docs":{},"计":{"docs":{},"算":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}}}}}}}}}}},"解":{"docs":{},"答":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}},"集":{"docs":{},"不":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"按":{"docs":{},"任":{"docs":{},"意":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"返":{"docs":{},"回":{"docs":{},"解":{"docs":{},"集":{"docs":{},"。":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}},"法":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}},"释":{"docs":{},"：":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"输":{"docs":{},"入":{"docs":{},"：":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.07042253521126761},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.023255813953488372}},"s":{"1":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.020618556701030927}}},"docs":{}}}}},"[":{"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"a":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}},":":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}},"[":{"1":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.04}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}},"出":{"docs":{},"：":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.028169014084507043},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.04225352112676056},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}},"2":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"、":{"docs":{},"[":{"4":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"、":{"docs":{},"[":{"2":{"docs":{},",":{"4":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},"、":{"docs":{},"[":{"4":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}},"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},"]":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}},"c":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}}},":":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.05333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}},"题":{"docs":{},"目":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":0.014084507042253521},"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334},"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186},"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082},"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549},"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}},"验":{"docs":{},"证":{"docs":{},"括":{"docs":{},"号":{"docs":{"leet-code/20-valid-parentheses.html":{"ref":"leet-code/20-valid-parentheses.html","tf":5}}}}}},"搜":{"docs":{},"索":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"leet-code/33-search-in-rotated-sorted-array.html":{"ref":"leet-code/33-search-in-rotated-sorted-array.html","tf":5}}}}}}}},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":5}}}}}},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":5}},"i":{"docs":{},"i":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":5}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}},"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}},",":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}},"3":{"docs":{},"]":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}},"3":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}},"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}}}},"docs":{}}},"docs":{}}},"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}},"]":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"2":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}},"docs":{}}},"2":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}},"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}},"docs":{}}},"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}},"docs":{}}},"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}},"]":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},",":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}}},"docs":{}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}}},"docs":{}}},"docs":{}}},"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}},"[":{"1":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"6":{"docs":{},",":{"2":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"3":{"docs":{},",":{"3":{"0":{"docs":{},",":{"3":{"4":{"docs":{},",":{"6":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.009569377990430622}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"7":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"5":{"docs":{},",":{"8":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"9":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"6":{"docs":{},",":{"9":{"docs":{},",":{"1":{"6":{"docs":{},",":{"2":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"0":{"docs":{},",":{"1":{"3":{"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"7":{"docs":{},",":{"2":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"8":{"docs":{},",":{"2":{"1":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.02}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"]":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},"[":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}},"]":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}},",":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306},"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.017241379310344827}}},"]":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}},"\"":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"]":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leet-code/35-search-insert-position.html":{"ref":"leet-code/35-search-insert-position.html","tf":0.013333333333333334}}}}}}}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"是":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"可":{"docs":{},"打":{"docs":{},"印":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}},"返":{"docs":{},"回":{"docs":{},"满":{"docs":{},"足":{"docs":{},"此":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"数":{"docs":{},"组":{"docs":{},"作":{"docs":{},"为":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"操":{"docs":{},"作":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}},"所":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"语":{"docs":{},"言":{"docs":{},"也":{"docs":{},"许":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"（":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"）":{"docs":{},"来":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"一":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"是":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"操":{"docs":{},"作":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"否":{"docs":{},"实":{"docs":{},"现":{"docs":{},"每":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"均":{"docs":{},"摊":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"队":{"docs":{},"列":{"docs":{},"？":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"n":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"总":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"能":{"docs":{},"花":{"docs":{},"费":{"docs":{},"较":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"产":{"docs":{},"品":{"docs":{},"经":{"docs":{},"理":{"docs":{},"，":{"docs":{},"目":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"带":{"docs":{},"领":{"docs":{},"一":{"docs":{},"个":{"docs":{},"团":{"docs":{},"队":{"docs":{},"开":{"docs":{},"发":{"docs":{},"新":{"docs":{},"的":{"docs":{},"产":{"docs":{},"品":{"docs":{},"。":{"docs":{},"不":{"docs":{},"幸":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"你":{"docs":{},"的":{"docs":{},"产":{"docs":{},"品":{"docs":{},"的":{"docs":{},"最":{"docs":{},"新":{"docs":{},"版":{"docs":{},"本":{"docs":{},"没":{"docs":{},"有":{"docs":{},"通":{"docs":{},"过":{"docs":{},"质":{"docs":{},"量":{"docs":{},"检":{"docs":{},"测":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"开":{"docs":{},"发":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"版":{"docs":{},"本":{"docs":{},"都":{"docs":{},"是":{"docs":{},"错":{"docs":{},"的":{"docs":{},"。":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863}}},"]":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":0.0136986301369863},"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{"leet-code/46-permutations.html":{"ref":"leet-code/46-permutations.html","tf":5}}}}},"x":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}},")":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.03389830508474576},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.01020408163265306}}},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":5}}}}}}},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}},"实":{"docs":{},"现":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}},"m":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"类":{"docs":{},"：":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}},"是":{"docs":{},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}},"否":{"docs":{},"在":{"docs":{},"单":{"docs":{},"元":{"docs":{},"测":{"docs":{},"试":{"docs":{},"中":{"docs":{},"出":{"docs":{},"错":{"docs":{},"。":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"查":{"docs":{},"找":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{},"你":{"docs":{},"应":{"docs":{},"该":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"减":{"docs":{},"少":{"docs":{},"对":{"docs":{},"调":{"docs":{},"用":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.03278688524590164}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"被":{"docs":{},"舍":{"docs":{},"去":{"docs":{},"。":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"只":{"docs":{},"保":{"docs":{},"留":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"被":{"docs":{},"舍":{"docs":{},"去":{"docs":{},"。":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"是":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}}},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}},"所":{"docs":{},"有":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"后":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"所":{"docs":{},"有":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}}}}}},"说":{"docs":{},"明":{"docs":{},":":{"docs":{"leet-code/69-sqrtx.html":{"ref":"leet-code/69-sqrtx.html","tf":0.01694915254237288}}},"：":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}},"解":{"docs":{},"集":{"docs":{},"不":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"。":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}},"*":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}},"/":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311},"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.025510204081632654}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}},"e":{"docs":{},";":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}},"]":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.015306122448979591}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}},"n":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0392156862745098}}}}}},"(":{"0":{"docs":{},")":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}},"docs":{},"n":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0392156862745098}},")":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}}},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}},"经":{"docs":{},"典":{"docs":{},"汉":{"docs":{},"诺":{"docs":{},"塔":{"docs":{},"问":{"docs":{},"题":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"3":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"及":{"docs":{},"n":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"穿":{"docs":{},"孔":{"docs":{},"圆":{"docs":{},"盘":{"docs":{},"，":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"可":{"docs":{},"以":{"docs":{},"滑":{"docs":{},"入":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"。":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"自":{"docs":{},"上":{"docs":{},"而":{"docs":{},"下":{"docs":{},"按":{"docs":{},"升":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"套":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"上":{"docs":{},"(":{"docs":{},"即":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"只":{"docs":{},"能":{"docs":{},"放":{"docs":{},"在":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"上":{"docs":{},"面":{"docs":{},")":{"docs":{},"。":{"docs":{},"移":{"docs":{},"动":{"docs":{},"圆":{"docs":{},"盘":{"docs":{},"时":{"docs":{},"受":{"docs":{},"到":{"docs":{},"以":{"docs":{},"下":{"docs":{},"限":{"docs":{},"制":{"docs":{},":":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"就":{"docs":{},"在":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"那":{"docs":{},"一":{"docs":{},"维":{"docs":{},"查":{"docs":{},"找":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}},"每":{"docs":{},"行":{"docs":{},"中":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"按":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"前":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}}}}},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}}}}},"次":{"docs":{},"只":{"docs":{},"能":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"盘":{"docs":{},"子":{"docs":{},";":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"下":{"docs":{},"面":{"docs":{},"俩":{"docs":{},"个":{"docs":{},"不":{"docs":{},"能":{"docs":{},"调":{"docs":{},"整":{"docs":{},"位":{"docs":{},"置":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}}}},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"m":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}},"搜":{"docs":{},"索":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"其":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"将":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"反":{"docs":{},"转":{"docs":{},"过":{"docs":{},"来":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"以":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"组":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"给":{"docs":{},"出":{"docs":{},"。":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"二":{"docs":{},"维":{"docs":{},"变":{"docs":{},"一":{"docs":{},"维":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"转":{"docs":{},"换":{"docs":{"leet-code/74-search-a-2d-matrix.html":{"ref":"leet-code/74-search-a-2d-matrix.html","tf":0.004784688995215311}}}}}}}}}}}}}}},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"递":{"docs":{},"归":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"规":{"docs":{},"模":{"docs":{},"？":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"理":{"docs":{},"解":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{},"的":{"docs":{},"模":{"docs":{},"版":{"docs":{},"写":{"docs":{},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":5}}}}}}}}}},"这":{"docs":{},"一":{"docs":{},"题":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"就":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}},"也":{"docs":{},"是":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"思":{"docs":{},"路":{"docs":{},"解":{"docs":{},"法":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":0.03125}}}}}}}}}}}},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"似":{"docs":{},"乎":{"docs":{},"也":{"docs":{},"是":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}}}}}}}}},"里":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"就":{"docs":{},"有":{"docs":{},"点":{"docs":{},"隐":{"docs":{},"晦":{"docs":{},"了":{"docs":{},"，":{"docs":{},"是":{"docs":{},"将":{"docs":{},"n":{"docs":{},"个":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"n":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"难":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"函":{"docs":{},"数":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"写":{"docs":{},"？":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"leet-code/78-subsets.html":{"ref":"leet-code/78-subsets.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"防":{"docs":{},"止":{"docs":{},"后":{"docs":{},"面":{"docs":{},"连":{"docs":{},"续":{"docs":{},"移":{"docs":{},"动":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"腾":{"docs":{},"出":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"数":{"docs":{},"组":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"数":{"docs":{},"量":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"m":{"docs":{},"和":{"docs":{},"n":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"大":{"docs":{},"小":{"docs":{},"等":{"docs":{},"于":{"docs":{},"m":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":0.010309278350515464}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}},"合":{"docs":{},"并":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"leet-code/88-merge-sorted-array.html":{"ref":"leet-code/88-merge-sorted-array.html","tf":5}}}}}}}},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":5}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"模":{"docs":{},"版":{"docs":{},"很":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"理":{"docs":{},"解":{"docs":{},"起":{"docs":{},"来":{"docs":{},"有":{"docs":{},"点":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"。":{"docs":{"leet-code/90-subsets-ii.html":{"ref":"leet-code/90-subsets-ii.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.022388059701492536},"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.04918032786885246},"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}},"=":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.014925373134328358}}}}}}}}}},"—":{"docs":{},"—":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.029850746268656716},"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}},"删":{"docs":{},"除":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}},"x":{"docs":{},"推":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}},"推":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"。":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}},"最":{"docs":{},"小":{"docs":{},"栈":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":5}}}}},"检":{"docs":{},"索":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"并":{"docs":{},"能":{"docs":{},"在":{"docs":{},"常":{"docs":{},"数":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"检":{"docs":{},"索":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"。":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"leet-code/155-min-stack.html":{"ref":"leet-code/155-min-stack.html","tf":0.022388059701492536}},"队":{"docs":{},"列":{"docs":{},"开":{"docs":{},"头":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653},"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.030612244897959183}},")":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}},".":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}},"u":{"docs":{},"s":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"移":{"docs":{},"除":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"元":{"docs":{},"素":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}}}},"和":{"docs":{},"i":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}},"想":{"docs":{},"象":{"docs":{},"俩":{"docs":{},"个":{"docs":{},"杯":{"docs":{},"子":{"docs":{},"装":{"docs":{},"水":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"杯":{"docs":{},"子":{"docs":{},"喝":{"docs":{},"水":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"杯":{"docs":{},"子":{"docs":{},"倒":{"docs":{},"水":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"你":{"docs":{},"仅":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"先":{"docs":{},"入":{"docs":{},"先":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{},"队":{"docs":{},"列":{"docs":{},"应":{"docs":{},"当":{"docs":{},"支":{"docs":{},"持":{"docs":{},"一":{"docs":{},"般":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"操":{"docs":{},"作":{"docs":{},"（":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"、":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"、":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"、":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"）":{"docs":{},"：":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"写":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"移":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"。":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"阶":{"docs":{},"：":{"docs":{"leet-code/232-implement-queue-using-stacks.html":{"ref":"leet-code/232-implement-queue-using-stacks.html","tf":0.00510204081632653}}}}},"。":{"docs":{},"该":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}},"一":{"docs":{},"遍":{"docs":{},"横":{"docs":{},"着":{"docs":{},"找":{"docs":{},"，":{"docs":{},"一":{"docs":{},"边":{"docs":{},"列":{"docs":{},"着":{"docs":{},"找":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}},"缩":{"docs":{},"小":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"规":{"docs":{},"模":{"docs":{},"；":{"docs":{"leet-code/240-search-a-2d-matrix-ii.html":{"ref":"leet-code/240-search-a-2d-matrix-ii.html","tf":0.01}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}},"docs":{}}}}},"假":{"docs":{},"设":{"docs":{},"你":{"docs":{},"有":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}},"所":{"docs":{},"以":{"docs":{},"，":{"4":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}},"docs":{}}}},"接":{"docs":{},"口":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"版":{"docs":{},"本":{"docs":{},"号":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}},"理":{"docs":{},"解":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"写":{"docs":{},"法":{"docs":{},"。":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.01639344262295082}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":5}}}}}}}}}},"调":{"docs":{},"用":{"docs":{"leet-code/278-first-bad-version.html":{"ref":"leet-code/278-first-bad-version.html","tf":0.04918032786885246}}}},"不":{"docs":{},"要":{"docs":{},"给":{"docs":{},"另":{"docs":{},"外":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"配":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"你":{"docs":{},"必":{"docs":{},"须":{"docs":{},"原":{"docs":{},"地":{"docs":{},"修":{"docs":{},"改":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"、":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"一":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":0.05}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"leet-code/344-reverse-string.html":{"ref":"leet-code/344-reverse-string.html","tf":5}}}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":5}},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"用":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"形":{"docs":{},"成":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"称":{"docs":{},"为":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"。":{"docs":{},"该":{"docs":{},"数":{"docs":{},"列":{"docs":{},"由":{"0":{"docs":{},"和":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"项":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"是":{"docs":{},"前":{"docs":{},"面":{"docs":{},"两":{"docs":{},"项":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"和":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{"leet-code/509-fibonacci-number.html":{"ref":"leet-code/509-fibonacci-number.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"按":{"docs":{},"奇":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{"leet-code/905-sort-array-by-parity.html":{"ref":"leet-code/905-sort-array-by-parity.html","tf":5}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.02586206896551724}}}}}}}}}}},"汉":{"docs":{},"诺":{"docs":{},"塔":{"docs":{},"问":{"docs":{},"题":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":5}}}}}}},"盘":{"docs":{},"子":{"docs":{},"只":{"docs":{},"能":{"docs":{},"从":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"顶":{"docs":{},"端":{"docs":{},"滑":{"docs":{},"出":{"docs":{},"移":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"根":{"docs":{},"柱":{"docs":{},"子":{"docs":{},";":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},"叠":{"docs":{},"在":{"docs":{},"比":{"docs":{},"它":{"docs":{},"大":{"docs":{},"的":{"docs":{},"盘":{"docs":{},"子":{"docs":{},"上":{"docs":{},"。":{"docs":{"leet-code/08-06-hanota-lcci.html":{"ref":"leet-code/08-06-hanota-lcci.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}},"length":1034},"corpusTokens":["\"()\"","\"()[]{}\"","\"([)]\"","\"(]\"","\"empty\"]","\"peek\",","\"pop\",","\"push\",","\"{[]}\"","\"中查找\");","&&","(!stack2.isempty())","(1)","(2)","(3)","(a","(a.size()","(begin","(colend","(int","(leftmost","(matrix","(matrix.length","(matrix[firstindex][secondindex]","(matrix[mid]","(matrix[mid][0]","(minstackimpl.isempty()","(minstackimpl.isempty())","(minstackimpl.peek()","(n","(num","(nums.length","(nums[end]","(nums[mid]","(nums[start]","(searchmatrix(matrix[start],","(stack1.isempty())","(start","(target","(x",")","*","*/","+","...,","/*","/**","//","//,23,26,30]],","//leetcod","0","0)","0);","0.","01","02","08.06","0;","0]","0],","0，f(1)","1","1)","1));","1,","10","104","109","13","155","1:","1;","1],","1、为什么循环条件和循环体写成这样？","1、在行、列做俩次二分查找","1、确定最终结果","1个盘子。","1：","2","2);","2)，其中n","2,","2.","2.82842...,","20","232","240","278","2:","2]","2],[0],[","2d","2、把二维降成一维","2、确定单个结果集","2：","3","3);","3,","3,null,0,","3.","33","344","35","3:","3],[],[],[],[]]","3、模版函数解决","3：","4","46","4:","4、返回","4：","5","509","5，并且","5：","69","7","74","78","8","88","90","905","=","==","=>",">",">=","[","[\"minstack\",\"push\",\"push\",\"push\",\"getmin\",\"pop\",\"top\",\"getmin\"]","[\"myqueue\",","[0]","[1,","[1,2,2]","[1,2,2],","[1,2,3,0,0,0],","[1,2,3]","[1,2,3],","[1,2],","[1,3,2],","[1,3,5,6],","[1]","[1],","[2,","[2,1,3],","[2,2],","[2,3,1],","[2,5,6],","[2]","[2],","[3,1,2],","[3,2,1]","[[1,3,5,7],[10,11,16,20],[23,30,34,60]],","[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21","[[],","[[],[","[]","[],","[]]","[null,","[null,null,null,null,","]","a)","a,","a.length","a.size()","api","array","array/","array/description/","arraylist<>());","arraylist<>();","arraylist<>(list));","arrays.sort(nums);","a中盘子的数目不大于14个。","a，返回一个数组，在该数组中，","b","b,","back","bad","begin","begin(prohibit","binarysearch(int[]","bool","boolean","c","c)","c);","c.add(a.get(0));","char","char[]","class","cn.com/problems/add","cn.com/problems/fibonacci","cn.com/problems/first","cn.com/problems/hanota","cn.com/problems/impl","cn.com/problems/merg","cn.com/problems/min","cn.com/problems/permutations/","cn.com/problems/remov","cn.com/problems/revers","cn.com/problems/search","cn.com/problems/sort","cn.com/problems/sqrtx/description/","cn.com/problems/subset","cn.com/problems/subsets/description/","cn.com/problems/swap","cn.com/problems/valid","code刷题","col","colbegin","colend","cycl","cycle/description/","data","deletion)","duplic","element","element.","empty()","empty.","empty操作是合法的。","end","end;","extend","f(0)","f(n","f(n)","fals","false;","false]","fib(int","fib(n","firstbadversion(int","front","getmin()","hanota(list","here.","https://leetcod","https://leetcode.com/problems/link","https://leetcode.com/problems/search","if(end","ii/description/","import","index","index++;","initi","input","insert","int","int[]","int[m];","introduct","is:","isbadversion(3)","isbadversion(4)","isbadversion(5)","isbadversion(version)","isvalid(str","item","java.util.arraylist;","java.util.arrays;","java.util.list;","java.util.stack;","lcci/","leet","link","list","list,","list.size())","list/descript","list/description/","list>","lists/description/","m","m,","matrix","matrix,","matrix.length","matrix.length;","matrix/description/","matrix[0].length","matrix[0].length;","matrix[i].length","merge(int[]","mid","mid)","mid;","minstack","minstack()","minstack();","minstack.getmin();","minstack.pop();","minstack.push(","minstack.push(0);","minstack.top();","minstackimpl","minstackimpl.peek().equals(stackimpl.pop()))","minstackimpl.peek();","minstackimpl.pop();","minstackimpl.push(x);","minstackimpl;","modif","moveplate(a.size(),","moveplate(int","moveplate(num","myqueu","myqueue()","myqueue();","myqueue.empty();","myqueue.peek();","myqueue.pop();","myqueue.push(1);","myqueue.push(2);","mysqrt(int","n","n)","n;","n]，你想找出导致之后所有版本出错的第一个错误的版本。","new","node","null","null,","num,","number/","numbers/description/","nums)","nums);","nums,","nums.length","nums1,","nums1[index]","nums1index","nums1index++;","nums1index;","nums2","nums2,","nums2[nums2index])","nums2[nums2index];","nums2index","nums2index++;","nums[mid])","nums中的所有元素互不相同","n矩阵中，是否存在一个目标值。该矩阵具有如下特性：","n，这样它就有足够的空间保存来自nums2的元素。","original,","pairs/description/","parameter\");","params\");","parentheses/","parity/","peek()","peek/pop","permute(int[]","permutehelper(list>","permutehelper(result,","pop()","pop、top和getmin操作总是在非空栈上调用。","pos)","pos;","position/description/","privat","public","push","push(int","push(x)","queue","queue)","queue.","region","remov","result","result,","result.add(new","result;","return","return;","reversestring(char[]","rotat","row","rowbegin","rowbegin++;","rowend","runtimeexception(\"illeg","runtimeexception(\"illegl","s)","s.tochararray();","searchinsert(int[]","searchmatrix(int[]","searchmatrix(int[][]","searchmatrix(matrix[matrix.length","size,","solut","sort","sortarraybyparity(int[]","sqrt(int","stack","stack/","stack1","stack1.isempty()","stack1.peek();","stack1.pop();","stack1.push(item);","stack2","stack2.isempty();","stack2.pop();","stack2.push(x);","stack<>();","stackimpl","stackimpl.peek();","stackimpl.push(x);","stackimpl;","stacks/","start","start;","string/","structur","submit","subsets(int[]","subsetshelper(list>","subsetshelper(result,","subsetswithdup(int[]","subsetswithduphelper(list>","subsetswithduphelper(result,","system.out.println(\"在维度为\"","s仅由括号'()[]{}'组成","target","target)","target))","target);","target,","target.add(original.remove(original.size()","temp);","temp,","tempnum","tempnums[nums1index];","throw","top()","top,","true","true;","two","us","version","version/description/","versioncontrol","void","whether","x","x)","x的平方根","{","||","}","——","。该矩阵具有以下特性：","一遍横着找，一边列着找","不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用o(1)的额外空间解决这一问题。","个版本[1,","中的一个目标值","为了防止后面连续移动nums1元素，这里腾出nums1数组","也就是只有push","二分查找","从队列的开头移除并返回元素","传入的pos是为了优化，减少递归子问题的规模？不是很理解","你只能使用标准的栈操作","你可以假设数组中无重复元素。","你可以假设数组中的所有字符都是ascii码表中的可打印字符。","你可以返回满足此条件的任何数组作为答案。","你可以通过调用","你所使用的语言也许不支持栈。你可以使用list或者deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。","你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。","你能否实现每个操作均摊时间复杂度为o(1)的队列？换句话说，执行n个操作的总时间复杂度为o(n)，即使其中一个操作可能花费较长时间。","使用回溯法的模版写法是：","假设你有","全排列","函数。","初始化nums1和nums2的元素数量分别为m和n。你可以假设nums1的空间大小等于m","删除栈顶的元素。","反转字符串","合并有序数组","含重复元素的子集","和i","在最后一维数组中查找","在经典汉诺塔问题中，有3根柱子及n个不同大小的穿孔圆盘，盘子可以滑入任意一根柱子。一开始，所有盘子自上而下按升序依次套在第一根柱子上(即每一个盘子只能放在更大的盘子上面)。移动圆盘时受到以下限制:","如果其中一个数组未完全移动完","如果字符串可以包含其他字符串的话，怎么做？","如果队列为空，返回true；否则，返回fals","实现","实现myqueue类：","将元素","将元素x推到队列的末尾","就在start那一维查找","左括号必须以正确的顺序闭合。","左括号必须用相同类型的右括号闭合。","想象俩个杯子装水，只能用一个杯子喝水，只能用一个杯子倒水","所以，4","按奇偶数排序","排序算法","接口来判断版本号","推入栈中。","提示:","提示：","搜索二维矩阵","搜索二维矩阵ii","搜索插入位置","搜索旋转排序数组","数据结构","斐波那契数","斐波那契数，通常用f(n)表示，形成的序列称为斐波那契数列。该数列由0和1开始，后面的每一项数字都是前面两项数字的和。也就是：","无重复元素的子集","是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用","是第一个错误的版本。","是非负整数。","最小栈","有效字符串需满足：","检索栈中的最小元素。","模版","每列的元素从上到下升序排列。","每列的所有元素从上到下升序排列","每次只能移动一个盘子;","每行中的整数从左到右按升序排列。","每行的元素从左到右升序排列。","每行的所有元素从左到右升序排列","每行的第一个整数大于前一行的最后一个整数。","汉诺塔问题","注意：下面俩个不能调整位置","理解循环的条件写法。","用于在排序的集合中查找某个元素。只不过需要注意一些细节。","用栈实现一个队列","由于返回类型是整数，小数部分将被舍去。","由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。","的平方根是","的平方根，其中","的所有偶数元素之后跟着所有奇数元素。","的次数。","盘子只能从柱子顶端滑出移到下一根柱子;","盘子只能叠在比它大的盘子上。","相关题目","矩阵","确定target在哪一维数组里","示例","示例1:","示例2:","示例:","示例：","第一个错误的版本","给你n，请计算f(n)。","给你一个整数数组nums，数组中的元素互不相同。返回该数组所有可能的子集（幂集）。","给你两个有序整数数组nums1和nums2，请你将nums2合并到nums1中，使nums1成为一个有序数组。","给定","给定一个只包括'('，')'，'{'，'}'，'['，']'的字符串s，判断字符串是否有效。","给定一个可能包含重复元素的整数数组nums，返回该数组所有可能的子集（幂集）。","给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。","给定一个没有重复数字的序列，返回其所有可能的全排列。","给定一个非负整数数组","编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组char[]的形式给出。","编写一个高效的算法来判断m","编写一个高效的算法来搜索","缩小问题的规模；","获取栈顶元素。","虽然模版很一样，但是理解起来有点麻烦。","要掌握二维变一维的下标转换","解法","解答","解释：","解集不能包含重复的子集。你可以按任意顺序返回解集。","计算并返回","设计一个支持push，pop，top操作，并能在常数时间内检索到最小元素的栈。","说明:","说明：","说明：解集不能包含重复的子集。","请你仅使用两个栈实现先入先出队列。队列应当支持一般队列的支持的所有操作（push、pop、peek、empty）：","请编写程序，用栈将所有盘子从第一根柱子移到最后一根柱子。","调用","输入:","输入:[1,3,5,6],","输入：","输入：[3,1,2,4]","输入：a","输入：matrix","输入：num","输入：nums1","输出:","输出：","输出：[1,2,2,3,5,6]","输出：[1]","输出：[2,4,3,1]、[4,2,3,1]、[2,4,1,3]、[4,2,1,3]","输出：[[],[0]]","输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]","输出：c","输出：fals","输出：true","返回","返回队列开头的元素","这一题的remove就是回溯的关键","这也是双指针思路的解法","这也是双指针思路解法的题目","这种解法似乎也是双指针的应用","这里拆分步骤就有点隐晦了，是将n个盘子问题，拆分成n","进阶：","链表","问题的难点就是递归辅助函数怎么写？剪枝的条件是什么？","题目","验证括号","（3）方便获取第一个出现的值"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"数据结构\nLeet-Code刷题\n"},"data-structure/03-linked-list.html":{"url":"data-structure/03-linked-list.html","title":"链表","keywords":"","body":"\nhttps://leetcode.com/problems/linked-list-cycle/description/\nhttps://leetcode.com/problems/linked-list-cycle-ii/description/\nhttps://leetcode-cn.com/problems/reverse-linked-list/description\nhttps://leetcode-cn.com/problems/reverse-linked-list-ii/description/\nhttps://leetcode-cn.com/problems/swap-nodes-in-pairs/description/\nhttps://leetcode-cn.com/problems/add-two-numbers/description/\nhttps://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/description/\nhttps://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/description/\nhttps://leetcode-cn.com/problems/merge-two-sorted-lists/description/\n"},"skill/01-binary-search.html":{"url":"skill/01-binary-search.html","title":"01-二分查找","keywords":"","body":"用于在排序的集合中查找某个元素。只不过需要注意一些细节。\n模版\n    public int binarySearch(int[] nums, int target) {\n        if (nums == null || nums.length == 0) {\n            return -1;\n        }\n\n        int start = 0;\n        int end = nums.length - 1;\n\n        while (start + 1  nums[mid]) {\n                start = mid;\n            } else {\n                end = mid; // （3）方便获取第一个出现的值\n            }\n        }\n\n        if (nums[start] == target) {\n            return start;\n        }\n        if (nums[end] == target) {\n            return end;\n        }\n        return -1;\n    }\n\n1、为什么循环条件和循环体写成这样？\n相关题目\nhttps://leetcode-cn.com/problems/first-bad-version/description/\nhttps://leetcode.com/problems/search-insert-position/description/\nhttps://leetcode-cn.com/problems/search-a-2d-matrix/description/\nhttps://leetcode-cn.com/problems/search-a-2d-matrix-ii/description/\nhttps://leetcode-cn.com/problems/sqrtx/description/\nhttps://leetcode-cn.com/problems/search-in-rotated-sorted-array/description/\n"},"skill/02-sort.html":{"url":"skill/02-sort.html","title":"02-排序算法","keywords":"","body":"\n"},"leet-code/20-valid-parentheses.html":{"url":"leet-code/20-valid-parentheses.html","title":"20-验证括号","keywords":"","body":"题目\n给定一个只包括'('，')'，'{'，'}'，'['，']'的字符串s，判断字符串是否有效。 \n有效字符串需满足： \n左括号必须用相同类型的右括号闭合。 \n左括号必须以正确的顺序闭合。 \n示例 1： \n输入：s = \"()\"\n输出：true\n示例 2： \n输入：s = \"()[]{}\"\n输出：true\n示例 3： \n输入：s = \"(]\"\n输出：false\n示例 4： \n输入：s = \"([)]\"\n输出：false\n示例 5： \n输入：s = \"{[]}\"\n输出：true\n提示： \n1 \ns仅由括号'()[]{}'组成 \n解答\nimport java.util.Stack;\n\n//leetcode submit region begin(Prohibit modification and deletion)\nclass Solution {\n    public boolean isValid(String s) {\n        Stack stack = new Stack<>();\n        char[] chars = s.toCharArray();\n        for (int i = 0; i \n如果字符串可以包含其他字符串的话，怎么做？\n\nhttps://leetcode-cn.com/problems/valid-parentheses/\n"},"leet-code/33-search-in-rotated-sorted-array.html":{"url":"leet-code/33-search-in-rotated-sorted-array.html","title":"33-搜索旋转排序数组","keywords":"","body":""},"leet-code/35-search-insert-position.html":{"url":"leet-code/35-search-insert-position.html","title":"35-搜索插入位置","keywords":"","body":"题目\n给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 \n 你可以假设数组中无重复元素。 \n示例 1: \n输入:[1,3,5,6], 5\n输出: 2\n示例 2: \n输入:[1,3,5,6], 2\n输出: 1\n示例 3: \n输入:[1,3,5,6], 7\n输出: 4\n示例 4: \n输入: [1,3,5,6], 0\n输出: 0\n解答\nclass Solution {\n    public int searchInsert(int[] nums, int target) {\n        if (nums == null || nums.length == 0) {\n            throw new RuntimeException(\"illegal parameter\");\n        }\n\n        int start = 0;\n        int end = nums.length - 1;\n\n        int mid = 0;\n        while (start + 1  target) {\n                end = mid;\n            } else if (nums[mid] \n"},"leet-code/46-permutations.html":{"url":"leet-code/46-permutations.html","title":"46-全排列","keywords":"","body":"题目\n给定一个没有重复数字的序列，返回其所有可能的全排列。 \n示例: \n输入: [1,2,3]\n输出:\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n] \n解答\nimport java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List> permute(int[] nums) {\n        List> result = new ArrayList<>();\n        if (nums.length == 0 ) {\n            return result;\n        }\n\n        List list = new ArrayList<>();\n        permuteHelper(result, list, nums);\n        return result;\n    }\n\n    private void permuteHelper(List> result, List list, int[] nums) {\n        if (nums.length == list.size()) {\n            result.add(new ArrayList<>(list));\n            return;\n        }\n\n        for (int i = 0; i \n\nhttps://leetcode-cn.com/problems/permutations/\n"},"leet-code/69-sqrtx.html":{"url":"leet-code/69-sqrtx.html","title":"69-x的平方根","keywords":"","body":"题目\n实现 int sqrt(int x) 函数。 \n计算并返回 x 的平方根，其中 x 是非负整数。 \n由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。 \n示例 1: \n输入: 4\n输出: 2\n示例 2: \n输入: 8\n输出: 2\n说明: 8 的平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。\n解答\nclass Solution {\n    public int mySqrt(int x) {\n        if (x == 0) {\n            return 0;\n        }\n        if (x  mid) {\n                start = mid;\n            } else {\n                end = mid;\n            }\n        }\n        if(end \n"},"leet-code/74-search-a-2d-matrix.html":{"url":"leet-code/74-search-a-2d-matrix.html","title":"74-搜索二维矩阵","keywords":"","body":"题目\n编写一个高效的算法来判断m x n矩阵中，是否存在一个目标值。该矩阵具有如下特性： \n每行中的整数从左到右按升序排列。 \n每行的第一个整数大于前一行的最后一个整数。 \n示例 1： \n输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n输出：true\n示例 2： \n输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n输出：false\n提示： \nm == matrix.length\nn == matrix[i].length \n1 \n-104 \n解答\n1、在行、列做俩次二分查找\nclass Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        if (matrix == null || matrix.length == 0) {\n            throw new RuntimeException(\"illegle input params\");\n        }\n\n        // 确定target在哪一维数组里\n        int start = 0;\n        int end = matrix.length - 1;\n        while (start + 1  target) {\n                end = mid;\n            } else if (matrix[mid][0]  target) {\n            return false;\n        }\n        /* 注意：下面俩个不能调整位置 */\n        // 就在start那一维查找\n        System.out.println(\"在维度为\" + start + \"中查找\");\n        if (searchMatrix(matrix[start], target)) {\n            return true;\n        }\n        // 在最后一维数组中查找\n        System.out.println(\"在维度为\" + (matrix.length - 1) + \"中查找\");\n        return searchMatrix(matrix[matrix.length - 1], target);\n    }\n\n    public boolean searchMatrix(int[] matrix, int target) {\n        if (matrix == null || matrix.length == 0) {\n            throw new RuntimeException(\"illegle input params\");\n        }\n\n        int start = 0;\n        int end = matrix.length - 1;\n        while (start + 1  target) {\n                end = mid;\n            } else if (matrix[mid] \n2、把二维降成一维\n要掌握二维变一维的下标转换\nclass Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        if (matrix == null || matrix.length == 0) {\n            throw new RuntimeException(\"illegle input params\");\n        }\n\n        int row = matrix.length;\n        int col = matrix[0].length;\n\n        int start = 0;\n        int end = row * col - 1;\n        while (start + 1  target) {\n                end = mid;\n            } else if (matrix[firstIndex][secondIndex] \n"},"leet-code/78-subsets.html":{"url":"leet-code/78-subsets.html","title":"78-无重复元素的子集","keywords":"","body":"题目\n给你一个整数数组nums，数组中的元素互不相同。返回该数组所有可能的子集（幂集）。 \n解集不能包含重复的子集。你可以按任意顺序返回解集。 \n示例 1： \n输入：nums = [1,2,3]\n输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n示例 2： \n输入：nums = [0]\n输出：[[],[0]]\n提示： \n1  \n-10  \nnums中的所有元素互不相同 \n解答\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nclass Solution {\n    public List> subsets(int[] nums) {\n        List> result = new ArrayList<>();\n        if (nums.length == 0) {\n            result.add(new ArrayList<>());\n            return result;\n        }\n        List list = new ArrayList<>();\n        subsetsHelper(result, list, nums, 0);\n        return result;\n    }\n\n    private void subsetsHelper(List> result, List list, int[] nums, int pos) {\n        result.add(new ArrayList<>(list));\n\n        for (int i = pos; i \n使用回溯法的模版写法是：\n1、确定最终结果\n2、确定单个结果集\n3、模版函数解决\n4、返回\n问题的难点就是递归辅助函数怎么写？剪枝的条件是什么？\n这一题的remove就是回溯的关键\n传入的pos是为了优化，减少递归子问题的规模？不是很理解\n\nhttps://leetcode-cn.com/problems/subsets/description/\n"},"leet-code/88-merge-sorted-array.html":{"url":"leet-code/88-merge-sorted-array.html","title":"88-合并有序数组","keywords":"","body":"题目\n给你两个有序整数数组nums1和nums2，请你将nums2合并到nums1中，使nums1成为一个有序数组。 \n初始化nums1和nums2的元素数量分别为m和n。你可以假设nums1的空间大小等于m + n，这样它就有足够的空间保存来自nums2的元素。 \n示例 1： \n输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\n输出：[1,2,2,3,5,6]\n示例 2： \n输入：nums1 = [1], m = 1, nums2 = [], n = 0\n输出：[1]\n解答\nclass Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n        int nums1Index = 0;\n        int nums2Index = 0;\n        int index = 0;\n\n        // 为了防止后面连续移动nums1元素，这里腾出nums1数组\n        int[] tempNums = new int[m];\n        for (int i = 0; i  nums2[nums2Index]) {\n                nums1[index] = nums2[nums2Index];\n                nums2Index++;\n            } else {\n                nums1[index] = tempNums[nums1Index];\n                nums1Index++;\n            }\n            index++;\n        }\n\n        // 如果其中一个数组未完全移动完\n        for (int i = nums1Index; i \n这也是双指针思路解法的题目\nhttps://leetcode-cn.com/problems/merge-sorted-array/\n"},"leet-code/90-subsets-ii.html":{"url":"leet-code/90-subsets-ii.html","title":"90-含重复元素的子集","keywords":"","body":"题目\n给定一个可能包含重复元素的整数数组nums，返回该数组所有可能的子集（幂集）。 \n说明：解集不能包含重复的子集。 \n示例: \n输入: [1,2,2]\n输出:\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n] \n解答\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\nclass Solution {\n    public List> subsetsWithDup(int[] nums) {\n        List> result = new ArrayList<>();\n        if (nums.length == 0) {\n            result.add(new ArrayList<>());\n            return result;\n        }\n\n        Arrays.sort(nums);\n        List list = new ArrayList<>();\n        subsetsWithDupHelper(result, list, nums, 0);\n        return result;\n    }\n\n    private void subsetsWithDupHelper(List> result, List list, int[] nums, int pos) {\n        result.add(new ArrayList<>(list));\n\n\n        for (int i = pos; i \n虽然模版很一样，但是理解起来有点麻烦。\n\nhttps://leetcode-cn.com/problems/subsets-ii/description/\n"},"leet-code/155-min-stack.html":{"url":"leet-code/155-min-stack.html","title":"155-最小栈","keywords":"","body":"题目\n设计一个支持push，pop，top操作，并能在常数时间内检索到最小元素的栈。 \npush(x) —— 将元素 x 推入栈中。 \npop() —— 删除栈顶的元素。 \ntop() —— 获取栈顶元素。 \ngetMin() —— 检索栈中的最小元素。 \n示例: \n输入：\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n输出：\n[null,null,null,null,-3,null,0,-2]\n解释：\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --> 返回 -3.\nminStack.pop();\nminStack.top();      --> 返回 0.\nminStack.getMin();   --> 返回 -2.\n\n提示： \npop、top和getMin操作总是在非空栈上调用。 \n解法\nimport java.util.Stack;\n\n//leetcode submit region begin(Prohibit modification and deletion)\nclass MinStack {\n    private Stack minStackImpl;\n    private Stack stackImpl;\n\n    /** initialize your data structure here. */\n    public MinStack() {\n        minStackImpl = new Stack<>();\n        stackImpl = new Stack<>();\n    }\n\n    public void push(int x) {\n        if (minStackImpl.isEmpty()) {\n            minStackImpl.push(x);\n        } else if (minStackImpl.peek() >= x) {\n            minStackImpl.push(x);\n        }\n        stackImpl.push(x);\n    }\n\n    public void pop() {\n        if (minStackImpl.isEmpty() || minStackImpl.peek().equals(stackImpl.pop())) {\n            minStackImpl.pop();\n        }\n    }\n\n    public int top() {\n        return stackImpl.peek();\n    }\n\n    public int getMin() {\n        return minStackImpl.peek();\n    }\n}\n\n\nhttps://leetcode-cn.com/problems/min-stack/\n"},"leet-code/232-implement-queue-using-stacks.html":{"url":"leet-code/232-implement-queue-using-stacks.html","title":"232-用栈实现一个队列","keywords":"","body":"题目\n请你仅使用两个栈实现先入先出队列。队列应当支持一般队列的支持的所有操作（push、pop、peek、empty）： \n实现MyQueue类： \nvoid push(int x) 将元素x推到队列的末尾 \nint pop() 从队列的开头移除并返回元素 \nint peek() 返回队列开头的元素 \nboolean empty() 如果队列为空，返回true；否则，返回false \n说明： \n你只能使用标准的栈操作 —— 也就是只有push to top, peek/pop from top, size, 和is empty操作是合法的。\n你所使用的语言也许不支持栈。你可以使用list或者deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。 \n进阶： \n你能否实现每个操作均摊时间复杂度为O(1)的队列？换句话说，执行n个操作的总时间复杂度为O(n)，即使其中一个操作可能花费较长时间。 \n示例： \n输入：\n[\"MyQueue\", \"push\", \"push\", \"peek\", \"pop\", \"empty\"]\n[[], [1], [2], [], [], []]\n输出：\n[null, null, null, 1, 1, false]\n解释：\nMyQueue myQueue = new MyQueue();\nmyQueue.push(1); // queue is: [1]\nmyQueue.push(2); // queue is: [1, 2] (leftmost is front of the queue)\nmyQueue.peek(); // return 1\nmyQueue.pop(); // return 1, queue is [2]\nmyQueue.empty(); // return false\n\n解答\nimport java.util.Stack;\n\nclass MyQueue {\n    private Stack stack1 = new Stack<>();\n    private Stack stack2 = new Stack<>();\n\n    /** Initialize your data structure here. */\n    public MyQueue() {\n\n    }\n\n    /** Push element x to the back of queue. */\n    public void push(int x) {\n        stack2.push(x);\n    }\n\n    /** Removes the element from in front of queue and returns that element. */\n    public int pop() {\n        if (stack1.isEmpty()) {\n            while (!stack2.isEmpty()) {\n                int item = stack2.pop();\n                stack1.push(item);\n            }\n        }\n        return stack1.pop();\n    }\n\n    /** Get the front element. */\n    public int peek() {\n        if (stack1.isEmpty()) {\n            while (!stack2.isEmpty()) {\n                int item = stack2.pop();\n                stack1.push(item);\n            }\n        }\n        return stack1.peek();\n    }\n\n    /** Returns whether the queue is empty. */\n    public boolean empty() {\n        return stack1.isEmpty() && stack2.isEmpty();\n    }\n}\n\n想象俩个杯子装水，只能用一个杯子喝水，只能用一个杯子倒水\n\nhttps://leetcode-cn.com/problems/implement-queue-using-stacks/\n"},"leet-code/240-search-a-2d-matrix-ii.html":{"url":"leet-code/240-search-a-2d-matrix-ii.html","title":"240-搜索二维矩阵II","keywords":"","body":"题目\n编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target 。该矩阵具有以下特性： \n每行的元素从左到右升序排列。 \n每列的元素从上到下升序排列。 \n示例 1： \n输入：matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21\n//,23,26,30]], target = 5\n输出：true\n示例 2： \n输入：matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21\n//,23,26,30]], target = 20\n输出：false\n提示： \nm == matrix.length\nn == matrix[i].length\n1 \n-109 \n每行的所有元素从左到右升序排列\n每列的所有元素从上到下升序排列\n-109 \n解法\n一遍横着找，一边列着找 => 缩小问题的规模；\nclass Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        if (matrix == null || matrix.length == 0) {\n            throw new RuntimeException(\"illegle input params\");\n        }\n\n        int rowBegin = 0;\n        int rowEnd = matrix.length - 1;\n        int colBegin = 0;\n        int colEnd = matrix[0].length - 1;\n\n        while (colEnd >= colBegin && rowBegin  mid) {\n                rowBegin++;\n            } else if (target \n"},"leet-code/278-first-bad-version.html":{"url":"leet-code/278-first-bad-version.html","title":"278-第一个错误的版本","keywords":"","body":"题目\n你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。 \n假设你有 n 个版本[1, 2, ..., n]，你想找出导致之后所有版本出错的第一个错误的版本。 \n你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。 \n示例: \n给定 n = 5，并且 version = 4 是第一个错误的版本。\n\n调用 isBadVersion(3) -> false\n调用 isBadVersion(5) -> true\n调用 isBadVersion(4) -> true\n所以，4 是第一个错误的版本。\n\n解答\npublic class Solution extends VersionControl {\n    public int firstBadVersion(int n) {\n        int start = 1;\n        int end = n;\n        if (n \n理解循环的条件写法。\n"},"leet-code/344-reverse-string.html":{"url":"leet-code/344-reverse-string.html","title":"344-反转字符串","keywords":"","body":"题目\n编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组char[]的形式给出。 \n不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用O(1)的额外空间解决这一问题。 \n你可以假设数组中的所有字符都是ASCII码表中的可打印字符。\n解法\nclass Solution {\n    public void reverseString(char[] s) {\n        for (int i = 0; i \n这种解法似乎也是双指针的应用\n\nhttps://leetcode-cn.com/problems/reverse-string/\n"},"leet-code/509-fibonacci-number.html":{"url":"leet-code/509-fibonacci-number.html","title":"509-斐波那契数","keywords":"","body":"题目\n斐波那契数，通常用F(n)表示，形成的序列称为斐波那契数列。该数列由0和1开始，后面的每一项数字都是前面两项数字的和。也就是： \nF(0) = 0，F(1) = 1\nF(n) = F(n - 1) + F(n - 2)，其中n > 1\n给你n，请计算F(n)。\n解答\nclass Solution {\n    public int fib(int n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n}\n\n\nhttps://leetcode-cn.com/problems/fibonacci-number/\n"},"leet-code/905-sort-array-by-parity.html":{"url":"leet-code/905-sort-array-by-parity.html","title":"905-按奇偶数排序","keywords":"","body":"题目\n给定一个非负整数数组 A，返回一个数组，在该数组中， A 的所有偶数元素之后跟着所有奇数元素。 \n你可以返回满足此条件的任何数组作为答案。 \n示例： \n输入：[3,1,2,4]\n输出：[2,4,3,1]、[4,2,3,1]、[2,4,1,3]、[4,2,1,3] \n解法\nclass Solution {\n    public int[] sortArrayByParity(int[] A) {\n        int begin = 0;\n        int end = A.length - 1;\n        while (begin \n这也是双指针思路的解法\n\nhttps://leetcode-cn.com/problems/sort-array-by-parity/\n"},"leet-code/08-06-hanota-lcci.html":{"url":"leet-code/08-06-hanota-lcci.html","title":"08.06-汉诺塔问题","keywords":"","body":"题目\n在经典汉诺塔问题中，有3根柱子及N个不同大小的穿孔圆盘，盘子可以滑入任意一根柱子。一开始，所有盘子自上而下按升序依次套在第一根柱子上(即每一个盘子只能放在更大的盘子上面)。移动圆盘时受到以下限制:\n(1) 每次只能移动一个盘子;\n(2) 盘子只能从柱子顶端滑出移到下一根柱子;\n(3) 盘子只能叠在比它大的盘子上。\n请编写程序，用栈将所有盘子从第一根柱子移到最后一根柱子。\n示例1:\n输入：A = [2, 1, 0], B = [], C = []\n输出：C = [2, 1, 0]\n示例2:\n输入：A = [1, 0], B = [], C = []\n输出：C = [1, 0]\n提示:\nA中盘子的数目不大于14个。\n解答\nclass Solution {\n    public void hanota(List A, List B, List C) {\n        if (A == null || A.size() == 0) {\n            return;\n        } else if (A.size() == 1) {\n            C.add(A.get(0));\n            return;\n        }\n        movePlate(A.size(), A, B, C);\n    }\n\n    private void movePlate(int num, List original, List temp, List target) {\n        if (num == 1) {\n            target.add(original.remove(original.size() - 1));\n            return;\n        }\n\n        movePlate(num - 1, original, target, temp);\n        target.add(original.remove(original.size() - 1));\n        movePlate(num - 1, temp, original, target);\n    }\n\n}\n\n这里拆分步骤就有点隐晦了，是将n个盘子问题，拆分成n-1个盘子。\n\nhttps://leetcode-cn.com/problems/hanota-lcci/\n"}}}